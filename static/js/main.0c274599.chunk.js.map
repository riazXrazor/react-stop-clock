{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["defaultOptions","id","onTick","presist","key","presistanceType","window","localStorage","constructor","options","props","useState","t","this","d","getItem","parseJSON","useEffect","setInterval","setDuration","intervalToDuration","end","_end","clearInterval","className","map","duration","val","style","margin","Date","differenceInSeconds","e","CountdownTimer","TimerComponent","stopTimer","isTimerActive","getCurrentTimeInSeconds","startTimer","resetTimer","App","React","value","setValue","labels","minutes","seconds","onClick","ReactDOM","render","document","getElementById"],"mappings":"4QAOA,IAAIA,EAAiB,CACnBC,GADmB,EAEnBC,OAFmB,KAGnBC,SAHmB,EAInBC,IAJmB,mBAKnBC,gBAAiBC,OAAOC,c,MAE1B,MACEC,YAAYC,GAAS,oBAYHC,IAAU,QACVC,mBAAS,KACvB,IAAIC,EAAI,IAAR,KACA,GAAIC,KAAJ,QAAkB,CAChB,MAAMC,EAAID,KAAKR,gBAAgBU,QAAQ,GAA7B,OAAgCF,KAAKT,IAArC,YAA4CS,KAAtD,KACA,EACED,EAAII,YAAJJ,GAEAC,KAAA,kCACKA,KAAKT,IADV,YACiBS,KADjB,IAEED,EAFF,eAOJ,OADAC,KAAA,OAAAD,EACA,IAdI,EADoB,sBAiBMD,mBAAhC,IAjB0B,mBAiBpB,EAjBoB,KAiBpB,EAjBoB,KAqC1B,OAnBAM,oBAAU,KACRJ,KAAA,OAAcK,YAAY,KACxBC,EAAY,KACVN,KAAA,KAAY,IAAZ,KACA,MAAMC,EAAIM,YAAmB,SAE3BC,IAAKR,KAAKS,OAKZ,OAHIT,KAAJ,QACEA,KAAA,UAEF,KAVJ,KAaO,KACLU,cAAcV,KAAdU,UAfJN,IAoBE,yBAAKO,UAAU,8BACZC,IAAIC,EAAU,CAACC,EAAKvB,IACZuB,EACL,0BACEH,UAAS,gCADX,GAEEpB,IAAG,UAAKS,KAAKT,IAAV,YAAiBuB,GAAjB,OAFL,GAGEC,MAAO,CAAEC,OAAQ,QAHnB,MAME,2BAAOL,UAAS,2BAAsBpB,IACnCM,UAAgBA,SAAhBA,GAAoCA,SAApCA,GARG,IAAV,QApDa,mBAqEL,IACdG,KAAKV,UACCU,KAAKR,gBAAgBU,QAAQ,GAA7B,OAAgCF,KAAKT,IAArC,YAA4CS,KADlD,KAEIA,KAxEe,sBA0ET,KACVU,cAAcV,KAAdU,QACIV,KAAJ,SACEA,KAAA,qCAAmCA,KAAKT,IAAxC,YAA+CS,KAA/C,MA7EiB,gBAiFR,KACXA,KAAA,OAAc,IAAd,KACIA,KAAJ,SACEA,KAAA,kCACKA,KAAKT,IADV,YACiBS,KADjB,KAEE,IAAIiB,MAFN,gBApFiB,gBA2FR,KACX,MAAMhB,EAAI,IAAV,KACAD,KAAA,kCAAgCA,KAAKT,IAArC,YAA4CS,KAA5C,IAAuDC,EAAvD,gBA7FmB,6BAgGK,KACxB,IACE,OAAOiB,YAAoBlB,KAAD,KAAYA,KAAtC,QACA,MAAOmB,GACP,WAnGFhC,EAAiB,8BAAwBS,GACzCI,KAAA,GAAUb,EAAV,GACAa,KAAA,OAAcb,EAAd,OACAa,KAAA,QAAeb,EAAf,QACAa,KAAA,IAAWb,EAAX,IACAa,KAAA,gBAAuBb,EAAvB,gBACAa,KAAA,YACAA,KAAA,SACAA,KAAA,S,eCZA,IAAIoB,EAAe,CACrBhC,GAAI,EAEJC,OAAS8B,QATTE,E,EAAAA,eAEAC,G,EADAC,c,EACAD,WAGAE,G,EAFAC,W,EACAC,W,EACAF,yBA+BaG,MAtBH,KAAO,MAAD,EACUC,IAAM9B,SAAS,GADzB,mBACT+B,EADS,KACFC,EADE,KAGhB,OACE,oCACE,kBAACT,EAAD,CACEU,OAAQ,CACNC,QAAS,MACTC,QAAS,SAGb,6BAAMJ,GACN,6BACE,4BAAQK,QAASZ,GAAjB,QACA,4BAAQY,QAAS,IAAMJ,EAASN,MAAhC,kBC5BRW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0c274599.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\nimport intervalToDuration from 'date-fns/intervalToDuration'\nimport parseJSON from 'date-fns/parseJSON'\nimport differenceInSeconds from 'date-fns/differenceInSeconds'\nimport map from 'lodash/map'\n\nlet defaultOptions = {\n  id: 1,\n  onTick: null,\n  presist: true,\n  key: 'react-stop-clock',\n  presistanceType: window.localStorage\n}\nclass ReactStopClock {\n  constructor(options) {\n    defaultOptions = { ...defaultOptions, ...options }\n    this.id = defaultOptions.id\n    this.onTick = defaultOptions.onTick\n    this.presist = defaultOptions.presist\n    this.key = defaultOptions.key\n    this.presistanceType = defaultOptions.presistanceType\n    this._timer = null\n    this._start = 0\n    this._end = 0\n  }\n\n  TimerComponent = (props) => {\n    const [start] = useState(() => {\n      let t = new Date()\n      if (this.presist) {\n        const d = this.presistanceType.getItem(`${this.key}-${this.id}`)\n        if (d) {\n          t = parseJSON(d)\n        } else {\n          this.presistanceType.setItem(\n            `${this.key}-${this.id}`,\n            t.toISOString()\n          )\n        }\n      }\n      this._start = t\n      return t\n    })\n    const [duration, setDuration] = useState({})\n    useEffect(() => {\n      this._timer = setInterval(() => {\n        setDuration(() => {\n          this._end = new Date()\n          const d = intervalToDuration({\n            start,\n            end: this._end\n          })\n          if (this.onTick) {\n            this.onTick(d)\n          }\n          return d\n        })\n      }, 1000)\n      return () => {\n        clearInterval(this._timer)\n      }\n    }, [])\n\n    return (\n      <div className='react-stop-clock-container'>\n        {map(duration, (val, key) => {\n          return val ? (\n            <span\n              className={`react-stop-clock-time-${key}`}\n              key={`${this.key}-${val}${key}`}\n              style={{ margin: '3px' }}\n            >\n              {val}{' '}\n              <small className={`react-stop-clock-${key}`}>\n                {props.labels && props.labels[key] ? props.labels[key] : key}\n              </small>\n            </span>\n          ) : null\n        })}\n      </div>\n    )\n  }\n\n  isTimerActive = () =>\n    this.presist\n      ? !!this.presistanceType.getItem(`${this.key}-${this.id}`)\n      : this._timer\n\n  stopTimer = () => {\n    clearInterval(this._timer)\n    if (this.presist) {\n      this.presistanceType.removeItem(`${this.key}-${this.id}`)\n    }\n  }\n\n  startTimer = () => {\n    this._start = new Date()\n    if (this.presist) {\n      this.presistanceType.setItem(\n        `${this.key}-${this.id}`,\n        new Date().toISOString()\n      )\n    }\n  }\n\n  resetTimer = () => {\n    const d = new Date()\n    this.presistanceType.setItem(`${this.key}-${this.id}`, d.toISOString())\n  }\n\n  getCurrentTimeInSeconds = () => {\n    try {\n      return differenceInSeconds(this._end, this._start)\n    } catch (e) {\n      return 0\n    }\n  }\n}\n\nexport default ReactStopClock\n","import React from 'react'\n\nimport CountdownTimer from 'react-stop-clock'\nimport 'react-stop-clock/dist/index.css'\n\nconst {\n  TimerComponent,\n  isTimerActive,\n  stopTimer,\n  startTimer,\n  resetTimer,\n  getCurrentTimeInSeconds\n} = new CountdownTimer({\n  id: 1,\n  // presist: true,\n  onTick: (e) => {\n    //console.log(e)\n  }\n})\n\nconst App = () => {\n  const [value, setValue] = React.useState(0)\n\n  return (\n    <>\n      <TimerComponent\n        labels={{\n          minutes: 'min',\n          seconds: 'sec'\n        }}\n      />\n      <div>{value}</div>\n      <div>\n        <button onClick={stopTimer}>Stop</button>\n        <button onClick={() => setValue(getCurrentTimeInSeconds())}>\n          get seconds\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}